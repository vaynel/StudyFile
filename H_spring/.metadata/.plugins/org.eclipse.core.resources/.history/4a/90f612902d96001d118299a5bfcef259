<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
   
   <!-- 
   		AOP : Aspect Oriented Programming
   		* 관점지향프로그래밍 		
   		객체지향프로그래밍 방식으로 구현된 어플리케이션의 규모가 커짐에 따라 
   		객체지향의 모듈화를 하였음에도, 재모듈화 해야할 공통관심사들이 생기기 시작
   		ex) logging, transaction...
   		공통관심사들을 모듈화하여 모듈의 재모듈화를 추구하는 방식
   		
   		
   		Aspect(Advisor) : 1. 공통 관심사, 2. Advice + Pointcuts
   		Advice 			: 공통 관심사를 모듈화한 객체
   		Join Points 	: 공통 관심사를 적용할 수 있는 모든 대상
   		
   		
   		  
   
    -->
    <context:component-scan base-package="aop01"></context:component-scan>
   
   
   
</beans>