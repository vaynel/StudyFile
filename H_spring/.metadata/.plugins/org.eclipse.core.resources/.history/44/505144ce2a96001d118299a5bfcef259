<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  
  
  <groupId>spring01_bean</groupId>
  <artifactId>spring01_bean</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <!-- 
  	maven : build tool
  	build : 개발자가 작성한 소스코드를 어플리케이션으로 만드는 것
  			
  			라이브러리와 소스코드를 하나의 프로젝트로 합쳐준다
  			실행과정에서 문제가 없는지 테스트 해본다.
  			class파일들과 라이브러리를 합쳐서 하나의 jar(java archive),war(web application archieve_파일로 생성
  			완성된 jar를 실행하거나, war를 웹 어플리케이션 서버(wa)에 배포하여 작성한 web application을 배포하게된다.
  			validate: validate the project is correct and all necessary information is available
			compile: compile the source code of the project
			test: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
			package: take the compiled code and package it in its distributable format, such as a JAR.
			integration-test: process and deploy the package if necessary into an environment where integration tests can be run
			verify: run any checks to verify the package is valid and meets quality criteria
			install: install the package into the local repository, for use as a dependency in other projects locally
			deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
			  
   -->
  <dependencies>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
   <dependency>
       <groupId>org.springframework</groupId>
       <artifactId>spring-context</artifactId>
       <version>5.3.24</version>
   </dependency>
   
   <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
	<dependency>
	    <groupId>org.aspectj</groupId>
	    <artifactId>aspectjweaver</artifactId>
	    <version>1.9.19</version>
	    <scope>runtime</scope>
	</dependency>
	
		<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt -->
	<dependency>
	    <groupId>org.aspectj</groupId>
	    <artifactId>aspectjrt</artifactId>
	    <version>1.9.19</version>
	    <scope>runtime</scope>
	</dependency>
		
   

  </dependencies>
  
  
  
  
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  
</project>